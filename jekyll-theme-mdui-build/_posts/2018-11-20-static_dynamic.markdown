---
layout: post
title: "Cisco Packet Tracer 学习笔记(三) 由一个场景引出管理距离&动态路由"
date: 2018-11-20 15:30:00 +0800
categories: technology
tags: cisco
img: "https://i.loli.net/2018/11/20/5bf41bd797e43.png"
---

理解应该不困难,但是打指令很绕

封面不知道应该用什么,Material Design瞎糊的图来凑

以后可能封面都会用MD瞎糊一个的那种图了


## 我需要干什么?
>有3台路由器,两两相连  
要做到三个路由器下的客户机在任意一条线路故障的情况下能够两两ping通  
先给路由器与客户机相连的接口配置好ip,并给客户机配置ip  
然后给每一个接口都配上ip  


结果如下图  
![rooooooooooooooouters](https://i.loli.net/2018/11/21/5bf51318e4128.png)  


看起来也许有点复杂,但是无非就是以前学习的:  
```
router(config)#int 接口
router(config=if)#ip add ip 子网掩码
router(config-if)#no sh
```  
每个路由器做3遍,一共3x3=⑨次,做完以后复制一份备用  
然后就开始本次的正题了

## 管理距离(优先级)
要使192.168.1.0/24与192.168.2.0/24的机器通讯,一个比较简单的方法是[静态路由](https://nyan.kiwi.cat/technology/2018/11/17/route_and_firewall.html#%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1)  
只要在router1上```ip route 192.168.2.0 255.255.255.0 10.10.21.2```  
然后在router2上```ip route 192.168.1.0 255.255.255.0 10.10.21.1```  

就可以做到  

但是如果最下面那条线路断了,那么192.168.1.0/24的客户机就无法与192.168.2.0/24的客户机通讯了
我们先把所有路由器的路由配置完成,每组路由器都要来回一次  
所以我们要输入```ip route 目标网段 子网掩码 下一跳路由```的指令2x3=6次

当我们配置完以后,3台机器在不故障的情况下能互ping的.
假设我们现在最下面一条线故障了  
那么我们应该需要让1的包从3绕到2,然后2要从2绕回3对不对?  (思考一下下,不要烦躁,可以多想一会儿)
那如果我们直接
```
router1(config)#ip route 192.168.2.0 255.255.255.0 10.10.31.3
```
那么之后3号路由器就会把包路由到2号路由器  (因为我们之前已经配好每一个路由了)  
(思考一下下,不要烦躁,可以多想一会儿)  

反之
```
router3(config)#ip route 192.168.1.0 255.255.255.0 10.10.32.3
```
那么之后3号路由器就会把包路由到1号路由器  (因为我们之前已经配好每一个路由了)  

(不要思考了,如果你瞬间没反应过来的话,你应该需要做的是回顾上面的内容)

可是,我们这样做的话会出现一个问题,就是说,192.168.1.0(或192.168.2.0)发出的包  
会被两条线路均衡负载掉,但是中间经过另一个路由的线路不是最近的距离  
这并不是最优的情况,所以就引出了一个叫做管理距离(优先级)的东西  

```router1(config)#ip route 192.168.2.0 255.255.255.0 10.10.31.3 10```

```ip route 目标网段 子网掩码 下一跳路由 距离```

后面只要跟大于1的数字,就可以作为次优先级的路由

所以每一组路由器要建立次优先级的路由,一共要设置2x3=6次

如果show run的话,每个路由器都会看到
```
ip route 192.168.x.0 255.255.255.0 10.10.x.x  
ip route 192.168.x.0 255.255.255.0 10.10.x.x  
ip route 192.168.x.0 255.255.255.0 10.10.x.x 10  
ip route 192.168.x.0 255.255.255.0 10.10.x.x 10  
```
的字样

## 动态路由

就没必要那么麻烦,在路由器上输入
```
router1(config)#router eigrp 1
router1(config-router)#net 192.168.1.0 0.0.0.255
router1(config-router)#net 10.10.31.0 0.0.0.255
router1(config-router)#net 10.10.21.0 0.0.0.255
```
注意这里的net宣告的是自己身上的网段 

```router1(config-router)#net 网段 反掩码```  

每个路由器这样来一遍就好了

<div style="text-align: right"> 顺颂学安 </div>